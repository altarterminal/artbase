#!/bin/sh
set -eu

######################################################################
# 設定
######################################################################

print_usage_and_exit () {
  cat <<-USAGE 1>&2
	Usage   : ${0##*/} [輝度値ファイル]
	Options :

	輝度値をアスキーアート文字に変換する。
	USAGE
  exit 1
}

######################################################################
# パラメータ
######################################################################

# 変数を初期化
opr=''

# 引数をパース
i=1
for arg in ${1+"$@"}
do
  case "$arg" in
    -h|--help|--version) print_usage_and_exit ;;
    *)
      if [ $i -eq $# ] && [ -z "$opr" ] ; then
        opr=$arg
      else
        echo "${0##*/}: invalid args" 1>&2
        exit 11
      fi
      ;;
  esac

  i=$((i + 1))
done

# 標準入力または読み取り可能な通常ファイルであるか判定
if   [ "_$opr" = '_' ] || [ "_$opr" = '_-' ]; then     
  opr=''
elif [ ! -f "$opr"   ] || [ ! -r "$opr"    ]; then
  echo "${0##*/}: \"$opr\" cannot be opened" 1>&2
  exit 21
else
  :
fi

# パラメータを決定
bright=$opr

######################################################################
# 本体処理
######################################################################

# 輝度値を入力
cat ${bright-:"$bright"}                                             |

# 出力文字を決定
awk  '
  {
    for (i = 1; i <= NF; i++) {
      if      ($i <    51) { printf "%s", "　"; }
      else if ($i <   102) { printf "%s", "・"; }
      else if ($i <   160) { printf "%s", "＋"; }
      else if ($i <   214) { printf "%s", "※"; }
      else                 { printf "%s", "■"; }
    }

    print "";
  }
'
